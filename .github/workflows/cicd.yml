# 1. 워크 플로 이름 지정
name: HappinesSQL CI/CD

# 2. 워크플로가 시작될 조건 지정
on:
  push:
    branches:  [ develop ]
  pull_request:
    branches: [ develop ]
  # types: [ closed ]
  # workflow_dispatch:

env:
  S3_BUCKET_NAME: happinessql-deploy
  PROJECT_NAME: happinessql

jobs:
  build:
    runs-on: ubuntu-latest # 3. 실행 환경 지정
    # if: github.event.pull_request.merged == true

    # 4. 실행 스텝 지정
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17 # 자바 설치
          distribution: 'adopt'

      - name: Set yml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml
        env:
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USER }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          cloud.aws.credentials.access-key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          cloud.aws.credentials.secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          jwt.secret: ${{ secrets.JWT_SECRET_KEY }}
          sentiment.clientId: ${{secrets.NAVER_CLIENT_ID}}
          sentiment.clientSecret: ${{secrets.NAVER_CLIENT_SECRET}}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash # 권한 부여

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash # build 시작

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" # build 시점의 시간확보

      - name: Show Current Time
        run: echo "CurrentTime=$"
        shell: bash # 확보한 시간 보여주기

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: aws deploy create-deployment --application-name happinessql-deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name develop --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
